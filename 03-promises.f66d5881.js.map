{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAkBMC,EAAWC,SAASC,cAAc,SAClCC,EAAiBF,SAASC,cAAc,uBACxCE,EAAgBH,SAASC,cAAc,sBACvCG,EAAkBJ,SAASC,cAAc,wBAOJ,SAAlCI,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACcC,KAAKC,SAAW,GAEzCJ,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAAUC,S,GAEfA,E,IAfeP,SAASC,cAAc,yBAqB/Ba,iBAAiB,SAAS,SAACC,GAETA,EAA5BC,iBAQyC,IALb,IAAxBC,EAASb,EAAgBc,MACzBC,EAAOhB,EAAce,MACrBE,EAAQlB,EAAegB,MAGpBG,EAAI,EAAGA,EAAIJ,EAAQI,IAAI,CAKqDhB,EAArEgB,EAJEF,EAAQC,EAAQC,GAKjCC,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MACjBiB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAEvEqB,OAAM,SAAAL,G,IAAGjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MAClBiB,EAAA3B,GAAS4B,OAAOI,QAAQ,sBAAuCF,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAKvER,EAAS+B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n/*\nНапиши скрипт, який на момент сабміту форми викликає функцію\ncreatePromise(position, delay) стільки разів, скільки ввели в поле amount.\nПід час кожного виклику передай їй номер промісу (position),\nщо створюється, і затримку, враховуючи першу затримку (delay),\nвведену користувачем, і крок (step).\nДоповни код функції createPromise таким чином,\nщоб вона повертала один проміс, який виконується або відхиляється через\ndelay часу. Значенням промісу повинен бути об'єкт, в якому будуть\nвластивості position і delay зі значеннями однойменних параметрів.\nВикористовуй початковий код функції для вибору того, що потрібно\nзробити з промісом - виконати або відхилити.\n*/\n\n\n//знайти елементи\nconst formElem = document.querySelector('.form');\nconst delayInputElem = document.querySelector('input[name=\"delay\"]');\nconst stepInputElem = document.querySelector('input[name=\"step\"]');\nconst amountInputElem = document.querySelector('input[name=\"amount\"]');\nconst bntSubmitElem = document.querySelector('button[type=\"submit\"]');\n\n\n\n\n//функція для створення промісу зі значенням обєкту\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(()=>{\n       const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    resolve({position, delay});\n  } else {\n    reject({position, delay});\n  }\n    }, delay)\n  })\n  return promise;\n}\n\n//слухаємо клік на кнопку\nbntSubmitElem.addEventListener('click', (e) => {\n  //щоб сторінка не перевантажувалась\n  e.preventDefault();\n\n  //записуємо значення введених даних\n  const amount = amountInputElem.value;\n  const step = stepInputElem.value;\n  const delay = delayInputElem.value;\n\n  //проходимся по значенню кількості виклику промісу\n  for (let i = 0; i < amount; i++){\n    let delayStep = step + (delay * i);\n\n    // викликаємо функцію створення промісу де передаємо дані - кількість разів виклику та крок затримки\n    \n    createPromise(i, delayStep)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n  }\n  //очищаємо форму після сабміту\n  formElem.reset();\n})\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formElem","document","querySelector","$ce04d3a99e08e73b$var$delayInputElem","$ce04d3a99e08e73b$var$stepInputElem","$ce04d3a99e08e73b$var$amountInputElem","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","amount","value","step","delay1","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","warning","reset"],"version":3,"file":"03-promises.f66d5881.js.map"}