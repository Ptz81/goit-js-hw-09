{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAkBc,MAARC,EAAWC,SAASC,cAAc,SAClCC,EAAiBF,SAASC,cAAc,uBACxCE,EAAgBH,SAASC,cAAc,sBACvCG,EAAkBJ,SAASC,cAAc,wBAOJ,SAAlCI,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACcC,KAAKC,SAAW,GAEzCJ,EAAQ,C,SAACH,E,MAAUC,IAEnBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAEtBA,EAAM,G,CAfSP,SAASC,cAAc,yBAqB/Ba,iBAAiB,SAAUC,IAETA,EAA5BC,iBAG4B,MAAxBC,EAASb,EAAgBc,MACzBC,EAAOhB,EAAce,MACrBE,EAAQlB,EAAegB,MAE7B,GAAID,GAAU,GAAKE,EAAO,GAAKC,EAAQ,EAEI,IAAtC,IAAIC,EAAI,EAAGA,EAAIJ,EAAQI,IAAI,CAC9B,IAAIC,EAAYH,EAAOE,EAI4DhB,EAArEgB,EAAGC,GAClBC,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBiB,EAAA3B,GAAS4B,OAAOC,QAAQ,uBAAqBpB,QAAiBC,MAAU,IAEzEoB,OAAM,EAACrB,SAAEA,EAAQC,MAAEA,MAClBiB,EAAA3B,GAAS4B,OAAOG,QAAQ,sBAAoBtB,QAAiBC,MAAU,IAGvEe,GAAaH,C,CAMfpB,EAAS8B,OAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n/*\nНапиши скрипт, який на момент сабміту форми викликає функцію\ncreatePromise(position, delay) стільки разів, скільки ввели в поле amount.\nПід час кожного виклику передай їй номер промісу (position),\nщо створюється, і затримку, враховуючи першу затримку (delay),\nвведену користувачем, і крок (step).\nДоповни код функції createPromise таким чином,\nщоб вона повертала один проміс, який виконується або відхиляється через\ndelay часу. Значенням промісу повинен бути об'єкт, в якому будуть\nвластивості position і delay зі значеннями однойменних параметрів.\nВикористовуй початковий код функції для вибору того, що потрібно\nзробити з промісом - виконати або відхилити.\n*/\n\n\n//знайти елементи\nconst formElem = document.querySelector('.form');\nconst delayInputElem = document.querySelector('input[name=\"delay\"]');\nconst stepInputElem = document.querySelector('input[name=\"step\"]');\nconst amountInputElem = document.querySelector('input[name=\"amount\"]');\nconst bntSubmitElem = document.querySelector('button[type=\"submit\"]');\n\n\n\n\n//функція для створення промісу зі значенням обєкту\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(()=>{\n       const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    resolve({position, delay});\n  } else {\n    reject({position, delay});\n  }\n    }, delay)\n  })\n  return promise;\n}\n\n//слухаємо клік на кнопку\nbntSubmitElem.addEventListener('click', (e) => {\n  //щоб сторінка не перевантажувалась\n  e.preventDefault();\n\n  //записуємо значення введених даних\n  const amount = amountInputElem.value;\n  const step = stepInputElem.value;\n  const delay = delayInputElem.value;\n\n  if (amount >= 0 && step > 0 && delay > 0) {\n     //проходимся по значенню кількості виклику промісу\n  for (let i = 0; i < amount; i++){\n    let delayStep = step * i;\n\n    // викликаємо функцію створення промісу де передаємо дані - кількість разів виклику та крок затримки\n\n    createPromise(i, delayStep)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n    delayStep += step;\n\n  }\n  }\n\n  //очищаємо форму після сабміту\n  formElem.reset();\n})\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formElem","document","querySelector","$47d4ff9957288465$var$delayInputElem","$47d4ff9957288465$var$stepInputElem","$47d4ff9957288465$var$amountInputElem","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","amount","value","step","delay1","i","delayStep","then","$parcel$interopDefault","Notify","success","catch","warning","reset"],"version":3,"file":"03-promises.4e392485.js.map"}