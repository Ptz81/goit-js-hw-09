{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAmBMC,GADWC,SAASC,cAAc,SACjBD,SAASC,cAAc,wBACxCC,EAAgBF,SAASC,cAAc,sBACvCE,EAAkBH,SAASC,cAAc,wBAO/C,SAASG,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACcC,KAAKC,SAAW,GAEzCJ,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAAUC,S,GAEfA,E,IAfeN,SAASC,cAAc,yBAoB/BY,iBAAiB,SAAS,SAACC,GACvCA,EAAEC,iBAMF,IAJA,IAAMC,EAASb,EAAgBc,MACzBC,EAAOhB,EAAce,MACrBE,EAAQpB,EAAekB,MAEpBG,EAAI,EAAGA,EAAIJ,EAAQI,IAAI,CAG9BhB,EAAcgB,GAFGF,EAAOC,GAASC,GAGlCC,MAAK,SAAAC,G,IAAGjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MACjBiB,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAwCC,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M,IAEvEqB,OAAM,SAAAL,G,IAAGjB,EAAQiB,EAARjB,SAAUC,EAAKgB,EAALhB,MAClBiB,EAAA1B,GAAS2B,OAAOI,QAAQ,sBAAqCF,OAAfrB,EAAS,QAAYqB,OAANpB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n/*\nНапиши скрипт, який на момент сабміту форми викликає функцію\ncreatePromise(position, delay) стільки разів, скільки ввели в поле amount.\nПід час кожного виклику передай їй номер промісу (position),\nщо створюється, і затримку, враховуючи першу затримку (delay),\nвведену користувачем, і крок (step).\nДоповни код функції createPromise таким чином,\nщоб вона повертала один проміс, який виконується або відхиляється через\ndelay часу. Значенням промісу повинен бути об'єкт, в якому будуть\nвластивості position і delay зі значеннями однойменних параметрів.\nВикористовуй початковий код функції для вибору того, що потрібно\nзробити з промісом - виконати або відхилити.\n*/\n\n\n//знайти елементи\nconst formElem = document.querySelector('.form');\nconst delayInputElem = document.querySelector('input[name=\"delay\"]');\nconst stepInputElem = document.querySelector('input[name=\"step\"]');\nconst amountInputElem = document.querySelector('input[name=\"amount\"]');\nconst bntSubmitElem = document.querySelector('button[type=\"submit\"]');\n\n\n\n\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(()=>{\n       const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    resolve({position, delay});\n  } else {\n    reject({position, delay});\n  }\n    }, delay)\n  })\n  return promise;\n}\n\nbntSubmitElem.addEventListener('click', (e) => {\n  e.preventDefault();\n\n  const amount = amountInputElem.value;\n  const step = stepInputElem.value;\n  const delay = delayInputElem.value;\n\n  for (let i = 0; i < amount; i++){\n    let delayStep = (step + delay) * i;\n\n    createPromise(i, delayStep)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n  }\n})\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$delayInputElem","document","querySelector","$ce04d3a99e08e73b$var$stepInputElem","$ce04d3a99e08e73b$var$amountInputElem","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","amount","value","step","delay1","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","warning"],"version":3,"file":"03-promises.388c39ba.js.map"}