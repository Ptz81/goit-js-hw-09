{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAkBiBC,SAASC,cAAc,SAA1B,MACRC,EAAiBF,SAASC,cAAc,uBACxCE,EAAgBH,SAASC,cAAc,sBACvCG,EAAkBJ,SAASC,cAAc,wBACzBD,SAASC,cAAc,yBAoB/BI,iBAAiB,SAAS,KACtCC,EAAEC,iBAEaH,EAAgBI,MAClBL,EAAcK,MACbN,EAAeM,MAnB/B,IAAuBC,EAAUC,GAAVD,EAqBP,EArBiBC,EAqBd,KApBD,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACcC,KAAKC,SAAW,GAEzCJ,EAAQ,C,SAACH,E,MAAUC,IAEnBG,EAAO,C,SAACJ,E,MAAUC,GAAO,GAEtBA,EAAM,KAaVO,MAAK,EAACR,SAAEA,EAAQC,MAAEA,MACjBQ,EAAApB,GAASqB,OAAOC,QAAQ,uBAAqBX,QAAiBC,MAAU,IAEzEW,OAAM,EAACZ,SAAEA,EAAQC,MAAEA,MAClBQ,EAAApB,GAASqB,OAAOG,QAAQ,sBAAoBb,QAAeC,MAAU,GACrE","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n/*\nНапиши скрипт, який на момент сабміту форми викликає функцію\ncreatePromise(position, delay) стільки разів, скільки ввели в поле amount.\nПід час кожного виклику передай їй номер промісу (position),\nщо створюється, і затримку, враховуючи першу затримку (delay),\nвведену користувачем, і крок (step).\nДоповни код функції createPromise таким чином,\nщоб вона повертала один проміс, який виконується або відхиляється через\ndelay часу. Значенням промісу повинен бути об'єкт, в якому будуть\nвластивості position і delay зі значеннями однойменних параметрів.\nВикористовуй початковий код функції для вибору того, що потрібно\nзробити з промісом - виконати або відхилити.\n*/\n\n\n//знайти елементи\nconst formElem = document.querySelector('.form');\nconst delayInputElem = document.querySelector('input[name=\"delay\"]');\nconst stepInputElem = document.querySelector('input[name=\"step\"]');\nconst amountInputElem = document.querySelector('input[name=\"amount\"]');\nconst bntSubmitElem = document.querySelector('button[type=\"submit\"]');\n\n//console.log(bntSubmitElem);\n\n\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(()=>{\n       const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    resolve({position, delay});\n  } else {\n    reject({position, delay});\n  }\n    }, delay)\n  })\n  return promise;\n}\n\nbntSubmitElem.addEventListener('click', () => {\n  e.preventDefault();\n\n  const amount = amountInputElem.value;\n  const step = stepInputElem.value;\n  const delay = delayInputElem.value;\n\n  createPromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.warning(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n})\n\n\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","$47d4ff9957288465$var$delayInputElem","$47d4ff9957288465$var$stepInputElem","$47d4ff9957288465$var$amountInputElem","addEventListener","e","preventDefault","value","position","delay","Promise","resolve","reject","setTimeout","Math","random","then","$parcel$interopDefault","Notify","success","catch","warning"],"version":3,"file":"03-promises.fb0691c1.js.map"}